BIN= $(GDK)/bin
LIB= $(GDK)/lib

SRC_LIB= $(GDK)/src
RES_LIB= $(GDK)/res
INCLUDE_LIB= $(GDK)/inc

SHELL= $(BIN)/sh
RM= $(BIN)/rm
CP= $(BIN)/cp
AR= $(BIN)/ar
CC= $(BIN)/gcc
JAVA= java
ECHO= echo
OBJCPY= $(BIN)/objcopy
ASMZ80= $(BIN)/sjasm
SIZEBND= $(BIN)/sizebnd
BINTOS= $(BIN)/bintos
RESCOMP= $(JAVA) -jar $(BIN)/rescomp.jar
MKDIR= $(BIN)/mkdir

SRC_LIB_C= $(wildcard $(SRC_LIB)/*.c)
SRC_LIB_S= $(wildcard $(SRC_LIB)/*.s)
SRC_LIB_S80= $(wildcard $(SRC_LIB)/*.s80)

RES_LIB_RES= $(wildcard $(RES_LIB)/*.res)

OBJ_LIB= $(RES_LIB_RES:.res=.o)
OBJ_LIB+= $(SRC_LIB_S80:.s80=.o)
OBJ_LIB+= $(SRC_LIB_S:.s=.o)
OBJ_LIB+= $(SRC_LIB_C:.c=.o)

LST_LIB= $(SRC_LIB_C:.c=.lst)

INCS_LIB= -I$(INCLUDE_LIB) -I$(SRC_LIB) -I$(RES_LIB)
DEFAULT_FLAGS_LIB= -m68000 -Wall -fno-builtin $(INCS_LIB) -B$(BIN)
FLAGSZ80_LIB= -i$(SRC_LIB) -i$(INCLUDE_LIB)


#release: FLAGS_LIB= $(DEFAULT_FLAGS_LIB) -O1 -fomit-frame-pointer -flto
release: FLAGS_LIB= $(DEFAULT_FLAGS_LIB) -O3 -fuse-linker-plugin -fno-web -fno-gcse -fno-unit-at-a-time -fomit-frame-pointer -flto
release: $(LIB)/libmd.a

debug: FLAGS_LIB= $(DEFAULT_FLAGS_LIB) -O1 -ggdb -DDEBUG=1
debug: $(LIB)/libmd_debug.a

asm: FLAGS_LIB= $(DEFAULT_FLAGS_LIB) -O3 -fuse-linker-plugin -fno-web -fno-gcse -fno-unit-at-a-time -fomit-frame-pointer -S
asm: $(LST_LIB)


all: release
default: release

Default: release
Debug: debug
Release: release
Asm: asm

.PHONY: clean


cleanlst:
	$(RM) -f $(LST_LIB)

cleanobj:
	$(RM) -f $(OBJ_LIB)

cleanrelease: cleanobj cleanlst
	$(RM) -f $(LIB)/libmd.a out.lst cmd_

cleandebug: cleanobj cleanlst
	$(RM) -f $(LIB)/libmd_debug.a out.lst cmd_

cleanasm: cleanlst

clean: cleanobj cleanlst
	$(RM) -f $(LIB)/libmd.a $(LIB)/libmd_debug.a out.lst cmd_

cleanall: clean
cleanAll: clean
cleandefault: clean
cleanDefault: clean

cleanRelease: cleanrelease
cleanDebug: cleandebug
cleanAsm: cleanasm


$(LIB)/libmd.a: cmd_
	$(AR) rs $(LIB)/libmd.a --plugin=liblto_plugin-0.dll @cmd_
	$(RM) cmd_

$(LIB)/libmd_debug.a: cmd_
	$(AR) rs $(LIB)/libmd_debug.a --plugin=liblto_plugin-0.dll @cmd_
	$(RM) cmd_

cmd_ : $(OBJ_LIB)
	$(ECHO) "$(OBJ_LIB)" > cmd_


%.lst: %.c
	$(CC) $(FLAGS_LIB) -c $< -o $@

%.o: %.c
	$(CC) $(FLAGS_LIB) -c $< -o $@

%.o: %.s
	$(CC) $(FLAGS_LIB) -c $< -o $@

%.s: %.res
	$(RESCOMP) $< $@

%.o80: %.s80
	$(ASMZ80) $(FLAGSZ80_LIB) $< $@ out.lst

%.s: %.o80
	$(BINTOS) $<